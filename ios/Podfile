
require_relative '../node_modules/react-native/scripts/react_native_pods'
require_relative '../node_modules/@react-native-community/cli-platform-ios/native_modules'
$FirebaseSDKVersion = '8.12.1'
platform :ios, '13.0'
# install! 'cocoapods', :deterministic_uuids => false
production = ENV["PRODUCTION"] == "1"

target 'ListaApp' do
  $static_framework = []
  config = use_native_modules!
  $static_framework += [
    'Permission-Notifications',
  ]

  permissions_path = '../node_modules/react-native-permissions/ios'
  pod 'Permission-Camera', :path => "#{permissions_path}/Camera"
  pod 'Permission-PhotoLibrary', :path => "#{permissions_path}/PhotoLibrary"
  pod 'Permission-Microphone', :path => "#{permissions_path}/Microphone"
  pod 'Permission-Notifications', :path => "#{permissions_path}/Notifications"
  pod 'RNPermissions', :path => '../node_modules/react-native-permissions'

  use_react_native!(
    :path => config[:reactNativePath],
    :hermes_enabled => true
  )
  
  target 'ListaAppTests' do
    inherit! :complete
    # Pods for testing
  end
  use_flipper!()

  
#   post_install do |installer|
#   flipper_post_install(installer)
#   Pod::Installer::Xcode::TargetValidator.send(:define_method, :verify_no_static_framework_transitive_dependencies) {}
#   installer.pod_targets.each do |pod|
#     if pod.name.eql?('RNPermissions') || pod.name.start_with?('Permission-')
#       def pod.build_type;
#         # Uncomment the line corresponding to your CocoaPods version
#         Pod::BuildType.static_library # >= 1.9
#         # Pod::Target::BuildType.static_library # < 1.9
#       end
#     end
#   end
    
#   pre_install do |installer|
#     `rm -rf node_modules/react-native/React/CSSLayout`
#   end
#   installer.pods_project.targets.each do |target|
#     target.build_configurations.each do |config|
#       config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)', '_LIBCPP_ENABLE_CXX17_REMOVED_UNARY_BINARY_FUNCTION']
#       config.build_settings['HEADER_SEARCH_PATHS'] ||= '$(inherited)'
#       config.build_settings['HEADER_SEARCH_PATHS'] << '${PODS_ROOT}/../../node_modules/react-native/ReactCommon'
#       if target.name === "RNReanimated"
#       config.build_settings['CLANG_CXX_LANGUAGE_STANDARD'] = 'c++17'
#       end
#       config.build_settings['ENABLE_BITCODE'] = 'NO'
#       config.build_settings['IPHONEOS_DEPLOYMENT_TARGET'] = '13.0'
#     end
#   end
#   react_native_post_install(installer)
#   __apply_Xcode_12_5_M1_post_install_workaround(installer)
# end
# def patch_subspecs(installer)
#     `find node_modules/react-native/React node_modules/react-native/ReactCommon \\( -name *.h -o -name *.m -o -name *.mm \\) -print0 | xargs -0 sed -i '' -E 's:<(yoga|jschelpers|cxxreact)/(.*)>:"\\2":g'`
#     installer.pods_project.targets.each do |target|
#         next unless target.name == 'React'
#         source_files = target.source_build_phase.files
#         uniqs = source_files.uniq { |f| f.file_ref.path }
#         (source_files - uniqs).each { |dup| source_files.delete(dup) }
#     end
# end


post_install do |installer|
  react_native_post_install(installer)
  __apply_Xcode_12_5_M1_post_install_workaround(installer)
   installer.pods_project.targets.each do |target|
    target.build_configurations.each do |config|
      config.build_settings['GCC_PREPROCESSOR_DEFINITIONS'] ||= ['$(inherited)', '_LIBCPP_ENABLE_CXX17_REMOVED_UNARY_BINARY_FUNCTION']
    end
    if target.respond_to?(:product_type) and target.product_type == "com.apple.product-type.bundle"
      target.build_configurations.each do |config|
        config.build_settings['CODE_SIGNING_ALLOWED'] = 'NO'
      end
      target.build_configurations.each do |config|
        config.build_settings['EXCLUDED_ARCHS[sdk=iphonesimulator*]'] = "arm64"
      end
    end
end
end

end
